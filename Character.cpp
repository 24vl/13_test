// practice.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//
#include"Character.h"
#include<map>
#include <iostream>
#include <string>
using namespace std;

enum GAME_STATE
{
    START,
    PLAY,
    END,
    QUIT
};


int main()
{
    Character c;


    GAME_STATE  state = START;


   
    string cmd;

    int MonsterDamage = 0;
    while (state != QUIT)
    {
        //While 과 switch를 통해 게임 루트 구성.
        switch (state)
        {
        case START:

            cout << "이름을 입력하세요." << endl;
            cout << "====================================================================" << endl;
            cin >> cmd;
            cout << "당신의 이름은 " << cmd << "이군요" << endl;
            cout << "게임을 시작하겠습니다." << endl;
            cout << "====================================================================" << endl;
            c.setName(cmd);
            state = PLAY;
            break;

        case PLAY:

            if (c.getLevel() == 10)
            {
                cout << "하늘에서 거대한 기운이 느껴집니다." << endl;
                cout << "보스 몬스터 |흑룡|출현!" << endl;
                cout << "매우 강력한 적입니다. 준비가 되셨습니까?(예:Y 아니요:N)";
                cin >> cmd;
                if (cmd == "Y")
                {
                    cout << "====================================================================" << endl;
                    cout << "보스 몬스터 |흑룡|을 처치하였습니다" << endl;
                    cout << "GAME CLEAR!" << endl;

                    state = QUIT;
                    break;
                }




            }
            cout << "몬스터가 등장했습니다. " << endl;
            cout << "맞서 싸우시겠습니까 ? (전투:Y 도주 N)" << endl;
            cout << "====================================================================" << endl;

            cin >> cmd;
            MonsterDamage = 0;

            if (cmd == "Y")
            {
                c.damage(MonsterDamage);
                cout << "====================================================================" << endl;
                if (c.getHealth() < 0)
                {
                    cout << "당신은 쓰러졌습니다.GAME OVER";
                    cout << "====================================================================" << endl;
                    state = QUIT;
                    break;
                }


                else
                {
                    cout << "몬스터를 해치웠습니다." << endl;

                    c.setGold(c.getGold() + 20); c.setExperience(c.getExperience() + 50);
                    cout << "50EXP를 얻었습니다!." << "현재 경험치:" << c.getExperience() << endl;
                    cout << "20Gold를 얻었습니다!. " << "현재 골드:" << c.getGold() << endl;
                    cout << "====================================================================" << endl;
                    if (c.getExperience() == 100)
                    {
                        c.levelUp();
                        cout << "====================================================================" << endl;

                    }
                    else if (c.getLevel() > 9)
                    {
                        cout << "최대 레벨임으로 경험치를 얻을수 없습니다." << endl;

                    }
                    state = PLAY;
                    break;
                }
            }

            if (cmd == "N")
            {
                cout << "무사히 도망쳤습니다.";
                state = END;
                break;
            }

            if (cmd != "Y" && "N")
            {
                cout << "====================================================================" << endl;
                cout << "잘못된 입력입니다" << endl;
                cout << "====================================================================" << endl;
                state = PLAY;
                break;
            }



        case END:
            cout << "1.상점을 간다 2.상태창을 연다.3.다시 전투에 돌입한다." << endl;
            cout << "(상점: P 상태창 : S 전투 : R)" << endl;
            cout << "====================================================================" << endl;
            cin >> cmd;


            if (cmd == "P")
            {
                cout << "====================================================================" << endl;
                cout << "상점에 오신걸 환영합니다." << "죄송하지만 재고가 아직 들어오지않았습니다. 다음에 와주세요." << endl;
                cout << "====================================================================" << endl;
                state = END;
                break;

            }
            else if (cmd == "S")
            {
                cout << "====================================================================" << endl;
                c.displayStatus();
                cout << "====================================================================" << endl;
                state = END;
                break;

            }

            else if (cmd == "R")
            {
                cout << "====================================================================" << endl;
                state = PLAY;
                break;

            }

            else if (cmd != "R" && "S" && "P")
            {
                cout << "====================================================================" << endl;
                cout << "잘못된 입력입니다." << endl;
                cout << "====================================================================" << endl;

                state = END;
                break;
            }



        case QUIT:

        {
            return 0;

        }



        // 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
        // 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

        // 시작을 위한 팁: 
        //   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
        //   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
        //   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
        //   4. [오류 목록] 창을 사용하여 오류를 봅니다.
        //   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
        //   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다. 

        }
    }
}